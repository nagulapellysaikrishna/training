package com.main;
import com.model.*;
import com.service.EmployeeDelete;
import com.service.EmployeeRead;
import com.service.EmployeeUpdate;

import java.util.Scanner;

public class EmployeeMain {



	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		System.out.println("How many Employees do you wanna add : ");
		int noOfEmployees = sc.nextInt();
		EmployeModel[] employees  = new EmployeModel[noOfEmployees];
		for (int i = 0; i < noOfEmployees-1; i++) {

			System.out.print("Enter Employe ID : " );
			int employeeId = sc.nextInt();
			System.out.print("Enter Employee Name : " );
			String employeeName = sc.next();
			System.out.print("Enter Employee Salary : ");
			float employeeSalary =  sc.nextFloat();
			
			EmployeModel employee1 = new EmployeModel(employeeId,employeeName,employeeSalary);
			employees[0]= employee1;
		}
			
			

		System.out.println("what to what to do : create=1/read=2/update=3/delete=4");
		int operation = sc.nextInt();
		
		switch (operation) {
		case 1 :
			noOfEmployees+=1;
			System.out.print("Enter Employe ID : " );
			int employeeId1 = sc.nextInt();
			System.out.print("Enter Employee Name : " );
			String employeeName1 = sc.next();
			System.out.print("Enter Employee Salary : ");
			float employeeSalary1 =  sc.nextFloat();
			
			EmployeModel employee2 = new EmployeModel(employeeId1,employeeName1,employeeSalary1);
			employees[1]= employee2;
			break;
			
		case 2:
			System.out.print("Which Employee do you want print(employeeId) : ");
			int readEmployee = sc.nextInt();
			EmployeeRead  employeeRead = new EmployeeRead();
			employeeRead.update(employees,readEmployee);
			
			break;
			
		case 3 :
			System.out.print("Which Employee do you want update(employeeId) : ");
			int updateval = sc.nextInt();
//			EmployeeUpdate employeeUpdate = new EmployeeUpdate();
			EmployeeUpdate.employeeUpdate(employees,updateval);
			
			
			
			break;
		case 4 :
			System.out.print("Which Employee do you want Delete(employeeId) : ");
			int deleteId = sc.nextInt();
			EmployeeDelete employeeDelete  = new EmployeeDelete();
			employeeDelete.delete(employees, deleteId);
			

		default:
			break;
		}
		
	}

}
